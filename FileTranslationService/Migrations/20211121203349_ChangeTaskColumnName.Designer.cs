// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tilde.MT.FileTranslationService.Models.Database;

#nullable disable

namespace Tilde.MT.FileTranslationService.Migrations
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20211121203349_ChangeTaskColumnName")]
    partial class ChangeTaskColumnName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.File", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DbCreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DbUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Extension")
                        .HasColumnType("longtext");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaskId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.FileCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("FileCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Source"
                        },
                        new
                        {
                            Id = 2,
                            Description = "SourceConverted"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Translated"
                        },
                        new
                        {
                            Id = 4,
                            Description = "TranslatedConverted"
                        });
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime?>("DbCreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DbUpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Domain")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FileName")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<long>("Segments")
                        .HasColumnType("bigint");

                    b.Property<long>("SegmentsTranslated")
                        .HasColumnType("bigint");

                    b.Property<string>("SourceLanguage")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("TargetLanguage")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<int?>("TranslationStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TranslationStatusId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.TranslationStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TranslationStatuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Queuing"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Initializing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Extracting"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Waiting"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Translating"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Saving"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Completed"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Error"
                        });
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.File", b =>
                {
                    b.HasOne("Tilde.MT.FileTranslationService.Models.Database.FileCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Tilde.MT.FileTranslationService.Models.Database.Task", "Task")
                        .WithMany("Files")
                        .HasForeignKey("TaskId");

                    b.Navigation("Category");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.Task", b =>
                {
                    b.HasOne("Tilde.MT.FileTranslationService.Models.Database.TranslationStatus", "TranslationStatus")
                        .WithMany("Tasks")
                        .HasForeignKey("TranslationStatusId");

                    b.Navigation("TranslationStatus");
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.Task", b =>
                {
                    b.Navigation("Files");
                });

            modelBuilder.Entity("Tilde.MT.FileTranslationService.Models.Database.TranslationStatus", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
